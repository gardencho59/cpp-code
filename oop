#include <iostream>
using namespace std;

class Animal {
public:
    virtual void makeSound() = 0;

    virtual void move() = 0;
};

class Dog : public Animal {
public:
    void makeSound() {
        cout << "Dog barks: Woof! Woof!" << endl;
    }
    void move() {
        cout << "Dog is moving" << endl;
    }
};

class Cat : public Animal {
public:
    void makeSound() {
        cout << "Cat meows: Meow! Meow!" << endl;
    }
    void move() {
        cout << "Cat is moving" << endl;
    }
};

class Cow : public Animal {
public:
    void makeSound() {
        cout << "Cow barks: Cow! Cow!" << endl;
    }
    void move() {
        cout << "Cow is moving" << endl;
    }
};

class Zoo {
private:
    Animal* animals[10];
    int count = 0;
public:
    void addAnimal(Animal* animal) {
        animals[count++] = animal;
    }

    void performActions() {
        for (int i = 0; i < count; ++i){
            animals[i]->makeSound();
            animals[i]->move();
        }
    }

    ~Zoo() {
        for (int i = 0; i < count; ++i){
            delete animals[i];
        }
    }
};

int main() {

    Dog myDog;
    Cat myCat;
    Cow myCow;

    Animal* animals[3] = { &myDog, &myCat, &myCow };

    for (Animal* a : animals) {
        a->makeSound();
    }

    return 0;
}
